{"content":"<h1 id=\"元素坐标计算\">元素坐标计算</h1>\n<h2 id=\"偏移尺寸\">偏移尺寸</h2>\n<ul>\n<li>offsetHeight<blockquote>\n<p>元素在垂直方向上占用的像素尺寸，包括它的高度、水平滚动条高度(如果可 见)和上、下边框的高度</p>\n</blockquote>\n</li>\n<li>offsetWidth<blockquote>\n<p>元素在水平方向上占用的像素尺寸，包括它的宽度、垂直滚动条宽度(如果可\n见)和左、右边框的宽度。</p>\n</blockquote>\n</li>\n<li>offsetTop<blockquote>\n<p>元素上边框外侧距离包含元素上边框内侧的像素数。</p>\n</blockquote>\n</li>\n<li>offsetLeft<blockquote>\n<p>元素左边框外侧距离包含元素左边框内侧的像素数。</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>其中 offsetTop,offsetLeft 是相对于包含元素的，包含元素保存在 offsetParent 中。offsetParent 不一定是 parentNode</strong></p>\n<ul>\n<li>要确定一个元素在页面的偏移量，可以把它的 offsetLeft 和 offsetTop 属性分别与 offsetParent 的相同属性相加，一直加到根元素。</li>\n</ul>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getElementLeft</span>(<span class=\"hljs-params\">element</span>) {\n  <span class=\"hljs-keyword\">let</span> actualLeft = element.<span class=\"hljs-property\">offsetLeft</span>;\n  <span class=\"hljs-keyword\">let</span> current = element.<span class=\"hljs-property\">offsetParent</span>;\n  <span class=\"hljs-keyword\">while</span> (current !== <span class=\"hljs-literal\">null</span>) {\n    actualLeft += current.<span class=\"hljs-property\">offsetLeft</span>;\n    current = current.<span class=\"hljs-property\">offsetParent</span>;\n  }\n  <span class=\"hljs-keyword\">return</span> actualLeft;\n}\n</code></pre>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getElementTop</span>(<span class=\"hljs-params\">element</span>) {\n  <span class=\"hljs-keyword\">let</span> actualTop = element.<span class=\"hljs-property\">offsetTop</span>;\n  <span class=\"hljs-keyword\">let</span> current = element.<span class=\"hljs-property\">offsetParent</span>;\n  <span class=\"hljs-keyword\">while</span> (current !== <span class=\"hljs-literal\">null</span>) {\n    actualTop += current.<span class=\"hljs-property\">offsetTop</span>;\n    current = current.<span class=\"hljs-property\">offsetParent</span>;\n  }\n  <span class=\"hljs-keyword\">return</span> actualTop;\n}\n</code></pre>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2021/10/myXyiL.png\" alt=\"偏移尺寸\"></p>\n<h2 id=\"客户端尺寸\">客户端尺寸</h2>\n<ul>\n<li>clientWidth<blockquote>\n<p>内容区宽度加左、右内边距宽度</p>\n</blockquote>\n</li>\n<li>clientHeight<blockquote>\n<p>内容区高度加上、下内边距高度</p>\n</blockquote>\n</li>\n</ul>\n<ol>\n<li><strong>不包含边框和滚动条，常用于确定浏览器视口尺寸，即 document.documentElement 的 clientWidth 和 clientHeight</strong></li>\n<li><strong>浏览器默认的 viewport 叫做 layout viewport。这个 layout viewport 的宽度可以通过 document.documentElement.clientWidth 来获取。移动端的 layout viewport 一般会大于屏幕的可视区域</strong></li>\n<li><strong>visual viewport 浏览器可视区域的宽度，可以通过 window.innerWidth 来获取</strong></li>\n<li><strong>要得到 ideal viewport 就必须把默认的 layout viewport 的宽度设为移动设备的屏幕宽度</strong></li>\n</ol>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2021/10/iaY83D.png\" alt=\"客户端尺寸\"></p>\n<h2 id=\"滚动尺寸\">滚动尺寸</h2>\n<ul>\n<li>scrollHeight<blockquote>\n<p>元素内容的总高度（包含滚动隐藏的区域），不包含边框和滚动条的高度</p>\n</blockquote>\n</li>\n<li>scrollWidth<blockquote>\n<p>元素内容的总宽度</p>\n</blockquote>\n</li>\n<li>scrollTop<blockquote>\n<p>内容区顶部隐藏的像素数，设置这个属性可以改变元素的滚动位置。</p>\n</blockquote>\n</li>\n<li>scrollLeft<blockquote>\n<p>内容区左侧隐藏的像素数，设置这个属性可以改变元素的滚动位置。</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>scrollWidth 和 scrollHeight 可以用来确定给定元素内容的实际尺寸,scrollWidth 和 scrollHeight 与 clientWidth 和 clientHeight 在不需要滚动的文档中是相等的</strong></p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2021/10/6zqOLK.png\" alt=\"滚动尺寸\"></p>\n<h2 id=\"确定元素的尺寸getboundingclientrect\">确定元素的尺寸——getBoundingClientRect()</h2>\n<ul>\n<li>浏览器在每个元素上都暴露了 getBoundingClientRect()方法，返回一个 DOMRect 对象，包含 6 个属性:left、top、right、bottom、height 和 width。这些属性给出了元素在页面中相对于视 口的位置</li>\n</ul>\n<p><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg-blog.csdnimg.cn%2F19937b4d5c3944f4b8a222fb6f3bd27a.png%3Fx-oss-process%3Dimage%2Fwatermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xnZGFyZW4%3D%2Csize_16%2Ccolor_FFFFFF%2Ct_7&refer=http%3A%2F%2Fimg-blog.csdnimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1646966744&t=71cc600d14c5c340b7422a75cfe583a6\" alt=\"元素尺寸\"></p>\n","fileName":"calcPosition"}