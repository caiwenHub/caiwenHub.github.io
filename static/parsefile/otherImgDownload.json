{"content":"<h1 id=\"图片下载的打开方式\">图片下载的打开方式</h1>\n<h2 id=\"前端方式\">前端方式</h2>\n<p><strong>1.</strong> 使用 a 标签</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;http://xxx.jpg&quot;</span> <span class=\"hljs-attr\">download</span>=<span class=\"hljs-string\">&quot;filename&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n</code></pre>\n<p><strong>2.</strong> 使用 javascript 动态创建 a 标签，不过 download 属性有同源限制，可以在链接后面拼上 response-content-type=application/octet-stream 字段，但也不是万能的。</p>\n<pre><code class=\"hljs javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">downloadImg</span>(<span class=\"hljs-params\">imgUrl, filename</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> download = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">&quot;a&quot;</span>);\n  <span class=\"hljs-keyword\">const</span> [href] = imgUrl.split(<span class=\"hljs-string\">&quot;?&quot;</span>);\n  download.href = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${href}</span>?response-content-type=application/octet-stream`</span>;\n  download.download = <span class=\"hljs-string\">&quot;filename&quot;</span>;\n  download.style.display = <span class=\"hljs-string\">&quot;none&quot;</span>;\n  <span class=\"hljs-built_in\">document</span>.body.appendChild(download);\n  download.click();\n  <span class=\"hljs-built_in\">document</span>.body.removeChild(download);\n}\n</code></pre>\n<p><strong>3.</strong> 使用 canvas 下载图片，这种方式下载后的图片大小和原图片大小不一致</p>\n<pre><code class=\"hljs javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">downloadImgByCanvas</span>(<span class=\"hljs-params\">imgUrl, filename</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> image = <span class=\"hljs-keyword\">new</span> Image();\n  image.setAttribute(<span class=\"hljs-string\">&quot;crossOrigin&quot;</span>, <span class=\"hljs-string\">&quot;anonymous&quot;</span>);\n  image.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">const</span> canvas = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">&quot;canvas&quot;</span>);\n    canvas.width = image.width;\n    canvas.height = image.height;\n    <span class=\"hljs-keyword\">const</span> context: any = canvas.getContext(<span class=\"hljs-string\">&quot;2d&quot;</span>);\n    context.drawImage(image, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, image.width, image.height);\n    <span class=\"hljs-keyword\">const</span> url = canvas.toDataURL(<span class=\"hljs-string\">&quot;image/jpg&quot;</span>);\n    <span class=\"hljs-keyword\">const</span> a = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">&quot;a&quot;</span>);\n    <span class=\"hljs-keyword\">const</span> event = <span class=\"hljs-keyword\">new</span> MouseEvent(<span class=\"hljs-string\">&quot;click&quot;</span>);\n    a.download = <span class=\"hljs-string\">&quot;download&quot;</span>;\n    a.href = url;\n    a.dispatchEvent(event);\n  };\n  image.src = imgUrl;\n}\n</code></pre>\n<p><strong>4.</strong> 使用 axios 请求下载，比较理想的方式，不会更改图片大小</p>\n<pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">import</span> axios <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;axios&quot;</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">downloadImgByAxios</span> = (<span class=\"hljs-params\">imgUrl, filename</span>) </span>{\n  axios.get(imgUrl, { <span class=\"hljs-attr\">responseType</span>: <span class=\"hljs-string\">&quot;blob&quot;</span> }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> href = <span class=\"hljs-built_in\">window</span>.URL.createObjectURL(res.data);\n    <span class=\"hljs-keyword\">const</span> a = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">&quot;a&quot;</span>);\n    a.href = href;\n    a.download = filename;\n    <span class=\"hljs-built_in\">document</span>.body.appendChild(a);\n    a.click();\n    <span class=\"hljs-built_in\">document</span>.body.removeChild(a);\n  });\n};\n</code></pre>\n<h2 id=\"服务端方式\">服务端方式</h2>\n<p>在 response Header 添加 Content-Disposition 字段：</p>\n<pre><code>Content-Disposition: attachment;filename=&quot;xx.jpg&quot;\n</code></pre>\n","fileName":"otherImgDownload"}