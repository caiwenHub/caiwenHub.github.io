<<<<<<< HEAD
{"content":"<h1 id=\"防抖函数\">防抖函数</h1>\n<h2 id=\"介绍\">介绍</h2>\n<p><strong>作用</strong>：定义一个时间切片，事件只在时间切片的终点执行，如果在终点之前触发多次，则重新定义当前时间切片，并重新计算时间。<br><strong>场景</strong>：按钮连续点击、事件监听（resize...）等防止事件频繁触发的场景。</p>\n<h2 id=\"es5-实现\">ES5 实现</h2>\n<p>es5 的实现方式需要注意 this 指向的问题，setTimeout 回调函数里的 this 指向 window。</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**\n *  <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Function}</span> </span>fn 需要防抖的函数\n *  <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> </span>delay 防抖时间\n *  <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Function}</span> </span>fn 是否立即执行\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">debounce</span>(<span class=\"hljs-params\">fn, delay, immediate = <span class=\"hljs-literal\">false</span></span>) </span>{\n  <span class=\"hljs-keyword\">let</span> timer = <span class=\"hljs-literal\">null</span>;\n  <span class=\"hljs-keyword\">let</span> stop = <span class=\"hljs-literal\">false</span>;\n  <span class=\"hljs-keyword\">const</span> debounceFn = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">const</span> _this = <span class=\"hljs-built_in\">this</span>;\n    <span class=\"hljs-keyword\">const</span> args = <span class=\"hljs-built_in\">arguments</span>;\n    <span class=\"hljs-keyword\">if</span> (stop) {\n      <span class=\"hljs-keyword\">return</span> (debounceFn.results = fn.apply(_this, args));\n    }\n    <span class=\"hljs-keyword\">if</span> (timer) <span class=\"hljs-built_in\">clearTimeout</span>(timer);\n    <span class=\"hljs-comment\">// 第一次timer是null,clearTimeout不会将timer置为空，还是一个数值</span>\n    <span class=\"hljs-keyword\">const</span> flag = timer;\n    <span class=\"hljs-keyword\">if</span> (immediate &amp;&amp; !flag) {\n      debounceFn.results = fn.apply(_this, args);\n    }\n    timer = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      debounceFn.results = fn.apply(_this, args);\n    }, delay);\n  };\n  <span class=\"hljs-comment\">// 关闭防抖</span>\n  debounceFn.clear = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    stop = <span class=\"hljs-literal\">true</span>;\n  };\n  <span class=\"hljs-comment\">// 打开防抖</span>\n  debounceFn.open = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    stop = <span class=\"hljs-literal\">false</span>;\n  };\n  <span class=\"hljs-comment\">// 记录方法的返回值</span>\n  debounceFn.results = <span class=\"hljs-literal\">undefined</span>;\n  <span class=\"hljs-keyword\">return</span> debounceFn;\n}\n</code></pre>\n<h2 id=\"es6-实现\">ES6 实现</h2>\n<pre><code class=\"hljs js\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">debounceEs6</span>(<span class=\"hljs-params\">fn, delay, immediate = <span class=\"hljs-literal\">false</span></span>) </span>{\n  <span class=\"hljs-keyword\">let</span> timer = <span class=\"hljs-literal\">null</span>;\n  <span class=\"hljs-keyword\">let</span> stop = <span class=\"hljs-literal\">false</span>;\n  <span class=\"hljs-keyword\">const</span> debounceFn = <span class=\"hljs-function\">(<span class=\"hljs-params\">...args</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (stop) {\n      debounceFn.results = fn(...args);\n      <span class=\"hljs-keyword\">return</span>;\n    }\n    <span class=\"hljs-keyword\">if</span> (timer) <span class=\"hljs-built_in\">clearTimeout</span>(timer);\n    <span class=\"hljs-keyword\">const</span> flag = timer;\n    <span class=\"hljs-comment\">// 第一次timer是null,clearTimeout不会将timer置为空，还是一个数值</span>\n    <span class=\"hljs-keyword\">if</span> (immediate &amp;&amp; !flag) {\n      debounceFn.results = fn(...args);\n    }\n    timer = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> {\n      debounceFn.results = fn(...args);\n    }, delay);\n  };\n  <span class=\"hljs-comment\">// 关闭防抖</span>\n  debounceFn.clear = <span class=\"hljs-function\">() =&gt;</span> (stop = <span class=\"hljs-literal\">true</span>);\n  <span class=\"hljs-comment\">// 打开防抖</span>\n  debounceFn.open = <span class=\"hljs-function\">() =&gt;</span> (stop = <span class=\"hljs-literal\">false</span>);\n  <span class=\"hljs-comment\">// 记录方法的返回值</span>\n  debounceFn.results = <span class=\"hljs-literal\">undefined</span>;\n  <span class=\"hljs-keyword\">return</span> debounceFn;\n}\n</code></pre>\n<h2 id=\"tips\">tips</h2>\n<blockquote>\n<p><strong>clearTimeout(timeoutID)</strong> 通过 <strong>timeoutID</strong> 取消由 <strong>setTimeout</strong> 创建的定时器，但是不会重置<strong>timeoutID</strong>的值</p>\n</blockquote>\n","fileName":"debounce"}
=======
{"content":"<h1 id=\"防抖函数\">防抖函数</h1>\n<h2 id=\"介绍\">介绍</h2>\n<p><strong>作用</strong>：定义一个时间切片，事件只在时间切片的终点执行，如果在终点之前触发多次，则重新定义当前时间切片，并重新计算时间。\n<strong>场景</strong>：按钮连续点击、事件监听（resize...）等防止事件频繁触发的场景。</p>\n<h2 id=\"es5-实现\">ES5 实现</h2>\n<p>es5 的实现方式需要注意 this 指向的问题，setTimeout 回调函数里的 this 指向 window。</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-comment\">/**\n *  <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">Function</span>} fn 需要防抖的函数\n *  <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">Number</span>} delay 防抖时间\n *  <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">Function</span>} fn 是否立即执行\n */</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">debounce</span>(<span class=\"hljs-params\">fn, delay, immediate = <span class=\"hljs-literal\">false</span></span>) {\n  <span class=\"hljs-keyword\">let</span> timer = <span class=\"hljs-literal\">null</span>;\n  <span class=\"hljs-keyword\">let</span> stop = <span class=\"hljs-literal\">false</span>;\n  <span class=\"hljs-keyword\">const</span> debounceFn = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> _this = <span class=\"hljs-variable language_\">this</span>;\n    <span class=\"hljs-keyword\">const</span> args = <span class=\"hljs-variable language_\">arguments</span>;\n    <span class=\"hljs-keyword\">if</span> (stop) {\n      <span class=\"hljs-keyword\">return</span> (debounceFn.<span class=\"hljs-property\">results</span> = fn.<span class=\"hljs-title function_\">apply</span>(_this, args));\n    }\n    <span class=\"hljs-keyword\">if</span> (timer) <span class=\"hljs-built_in\">clearTimeout</span>(timer);\n    <span class=\"hljs-comment\">// 第一次timer是null,clearTimeout不会将timer置为空，还是一个数值</span>\n    <span class=\"hljs-keyword\">const</span> flag = timer;\n    <span class=\"hljs-keyword\">if</span> (immediate &amp;&amp; !flag) {\n      debounceFn.<span class=\"hljs-property\">results</span> = fn.<span class=\"hljs-title function_\">apply</span>(_this, args);\n    }\n    timer = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n      debounceFn.<span class=\"hljs-property\">results</span> = fn.<span class=\"hljs-title function_\">apply</span>(_this, args);\n    }, delay);\n  };\n  <span class=\"hljs-comment\">// 关闭防抖</span>\n  debounceFn.<span class=\"hljs-property\">clear</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    stop = <span class=\"hljs-literal\">true</span>;\n  };\n  <span class=\"hljs-comment\">// 打开防抖</span>\n  debounceFn.<span class=\"hljs-property\">open</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    stop = <span class=\"hljs-literal\">false</span>;\n  };\n  <span class=\"hljs-comment\">// 记录方法的返回值</span>\n  debounceFn.<span class=\"hljs-property\">results</span> = <span class=\"hljs-literal\">undefined</span>;\n  <span class=\"hljs-keyword\">return</span> debounceFn;\n}\n</code></pre>\n<h2 id=\"es6-实现\">ES6 实现</h2>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">debounceEs6</span>(<span class=\"hljs-params\">fn, delay, immediate = <span class=\"hljs-literal\">false</span></span>) {\n  <span class=\"hljs-keyword\">let</span> timer = <span class=\"hljs-literal\">null</span>;\n  <span class=\"hljs-keyword\">let</span> stop = <span class=\"hljs-literal\">false</span>;\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">debounceFn</span> = (<span class=\"hljs-params\">...args</span>) =&gt; {\n    <span class=\"hljs-keyword\">if</span> (stop) {\n      debounceFn.<span class=\"hljs-property\">results</span> = <span class=\"hljs-title function_\">fn</span>(...args);\n      <span class=\"hljs-keyword\">return</span>;\n    }\n    <span class=\"hljs-keyword\">if</span> (timer) <span class=\"hljs-built_in\">clearTimeout</span>(timer);\n    <span class=\"hljs-keyword\">const</span> flag = timer;\n    <span class=\"hljs-comment\">// 第一次timer是null,clearTimeout不会将timer置为空，还是一个数值</span>\n    <span class=\"hljs-keyword\">if</span> (immediate &amp;&amp; !flag) {\n      debounceFn.<span class=\"hljs-property\">results</span> = <span class=\"hljs-title function_\">fn</span>(...args);\n    }\n    timer = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> {\n      debounceFn.<span class=\"hljs-property\">results</span> = <span class=\"hljs-title function_\">fn</span>(...args);\n    }, delay);\n  };\n  <span class=\"hljs-comment\">// 关闭防抖</span>\n  debounceFn.<span class=\"hljs-property\">clear</span> = <span class=\"hljs-function\">() =&gt;</span> (stop = <span class=\"hljs-literal\">true</span>);\n  <span class=\"hljs-comment\">// 打开防抖</span>\n  debounceFn.<span class=\"hljs-property\">open</span> = <span class=\"hljs-function\">() =&gt;</span> (stop = <span class=\"hljs-literal\">false</span>);\n  <span class=\"hljs-comment\">// 记录方法的返回值</span>\n  debounceFn.<span class=\"hljs-property\">results</span> = <span class=\"hljs-literal\">undefined</span>;\n  <span class=\"hljs-keyword\">return</span> debounceFn;\n}\n</code></pre>\n<h2 id=\"tips\">tips</h2>\n<blockquote>\n<p><strong>clearTimeout(timeoutID)</strong> 通过 <strong>timeoutID</strong> 取消由 <strong>setTimeout</strong> 创建的定时器，但是不会重置<strong>timeoutID</strong>的值</p>\n</blockquote>\n","fileName":"debounce"}
>>>>>>> 885be76210991b95497b96d1142fc6b6c69005a0
